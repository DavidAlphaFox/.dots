diff --git a/ale_linters/cpp/clang.vim b/ale_linters/cpp/clang.vim
index e48291e..e1d2891 100644
--- a/ale_linters/cpp/clang.vim
+++ b/ale_linters/cpp/clang.vim
@@ -4,13 +4,34 @@
 call ale#Set('cpp_clang_executable', 'clang++')
 call ale#Set('cpp_clang_options', '-std=c++14 -Wall')
 
+" The directory to change to before running mypy
+function! s:GetDir(buffer) abort
+    " If we find a directory with "mypy.ini" in it use that,
+    " else try and find the "python project" root, or failing
+    " that, run from the same folder as the current file
+    for l:path in ale#path#Upwards(expand('#' . a:buffer . ':p:h'))
+        if filereadable(l:path . '/WORKSPACE')
+            return l:path
+        endif
+    endfor
+endfunction
+
+
 function! ale_linters#cpp#clang#GetCommand(buffer, output) abort
     let l:cflags = ale#c#GetCFlags(a:buffer, a:output)
+    let l:dir = s:GetDir(a:buffer)
+    let l:containing = split(l:dir, "/")[-1]
 
+    " echo join(split(glob('bazel-src/external/*'), '\n'), ' -iquote ')
     " -iquote with the directory the file is in makes #include work for
     "  headers in the same directory.
-    return '%e -S -x c++ -fsyntax-only'
-    \   . ' -iquote ' . ale#Escape(fnamemodify(bufname(a:buffer), ':p:h'))
+    return ale#path#CdString(l:dir)
+    \   . '%e -S -x c++ -fsyntax-only -ferror-limit=0'
+    \   . ' -I ' . l:dir . '/bazel-out/k8-fastbuild/bin'
+    \   . ' -I ' . join(split(glob(l:dir . '/bazel-out/host/bin/**/*_proto_pb'), '\n'), ' -I ')
+    \   . ' -isystem ' . join(split(glob(l:dir . '/bazel-' . l:containing . '/external/*'), '\n'), ' -isystem ')
+    \   . ' -iquote ' . join(split(glob(l:dir . '/bazel-' . l:containing . '/external/*'), '\n'), ' -iquote ')
+    \   . ' -I ' . l:dir
     \   . ale#Pad(l:cflags)
     \   . ale#Pad(ale#Var(a:buffer, 'cpp_clang_options')) . ' -'
 endfunction
